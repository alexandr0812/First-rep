import telebot
from currency_converter import CurrencyConverter
from telebot import types

TOKEN = '7810754647:AAFa8wjn7eg0SdCG6XL22bANqv6Z-WG6IAw'
bot = telebot.TeleBot(TOKEN)

currency = CurrencyConverter()
amount = 0


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ‚ò∫Ô∏è.')
    bot.register_next_step_handler(message, summa)

def summa(message):
    global amount
    try:
        amount = float(message.text.strip().replace(',', '.'))
    except ValueError:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Çüòî, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ.')
        bot.register_next_step_handler(message, summa)
        return

    if amount >= 1:
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('USD/EUR', callback_data='USD/EUR')
        btn2 = types.InlineKeyboardButton('EUR/USD', callback_data='EUR/USD')
        btn3 = types.InlineKeyboardButton('CNY/EUR', callback_data='CNY/EUR')
        btn4 = types.InlineKeyboardButton('EUR/CNY', callback_data='EUR/CNY')
        btn5 = types.InlineKeyboardButton('CNY/USD', callback_data='CNY/USD')
        btn6 = types.InlineKeyboardButton('USD/CNY', callback_data='USD/CNY')
        btn7 = types.InlineKeyboardButton('CZK/EUR', callback_data='CZK/EUR')
        btn8 = types.InlineKeyboardButton('EUR/CZK', callback_data='EUR/CZK')
        btn9 = types.InlineKeyboardButton('CZK/USD', callback_data='CZK/USD')
        btn10 = types.InlineKeyboardButton('USD/CZK', callback_data='USD/CZK')
        btn11 = types.InlineKeyboardButton('–î—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ', callback_data='else')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn10, btn11)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—ã', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ, –ª–∏–±–æ —Ä–∞–≤–Ω–æ 1ü§ì. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        bot.register_next_step_handler(message, summa)

@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.data != 'else':
        values = call.data.upper().split('/')
        res = currency.convert(amount, values[0], values[1])
        bot.send_message(call.message.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç: {round(res, 2)}. –ú–æ–∂–µ—Ç–µ –∑–∞–Ω–æ–≤–æ –≤–ø–∏—Å–∞—Ç—å —á–∏—Å–ª–æ‚ò∫Ô∏è')
        bot.register_next_step_handler(call.message, summa)
    else:
        bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ª—é–±—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ /, –∫—Ä–æ–º–µ RUB, BYN –∏ KZT')
        bot.register_next_step_handler(call.message, my_currency)

def my_currency(message):
    try:
        values = message.text.upper().split('/')
        res = currency.convert(amount, values[0], values[1])
        bot.send_message(message.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç: {round(res, 2)}. –ú–æ–∂–µ—Ç–µ –∑–∞–Ω–æ–≤–æ –≤–ø–∏—Å–∞—Ç—å —á–∏—Å–ª–æ‚ò∫Ô∏è')
        bot.register_next_step_handler(message, summa)
    except Exception:
        bot.send_message(message.chat.id, f'–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Çüòî, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ.')
        bot.register_next_step_handler(message, my_currency)

bot.polling(none_stop=True)